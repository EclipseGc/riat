<?php

function riat_ui_menu() {
  $items = array();
  $items['admin/build/relationships/%/manage/%/add'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('riat_ui_add_relationship', 3, 5),
    'access arguments' => array('administer riat relationships'),
    'file' => 'riat.admin.inc',
    'file path' => drupal_get_path('module', 'riat') .'/includes',
    'type' => MENU_CALLBACK,
  );
  $items['admin/build/relationships/%ctools_export_ui/manage/%/delete'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('riat_ui_delete_relationship', 3, 5),
    'access arguments' => array('administer riat relationships'),
    'file' => 'riat.admin.inc',
    'file path' => drupal_get_path('module', 'riat') .'/includes',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function riat_ui_forms($form_id, $args) {
  $forms['riat_ui_add_relationship'] = array(
    'callback' => 'riat_add_relationship',
  );
  $forms['riat_ui_delete_relationship'] = array(
    'callback' => 'riat_delete_relationship',
  );
  return $forms;
}


/**
 * Implementation of hook_ctools_plugin_directory().
 */
function riat_ui_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && $plugin == 'export_ui') {
    return 'plugins/' . $plugin;
  }
}

function riat_ui_perm() {
  return array('administer riat relationships');
}

function riat_ui_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'riat_ui_relationship_item_form') {
    $breadcrumb = drupal_get_breadcrumb();
    $breadcrumb[] = l('Administer', 'admin');
    $breadcrumb[] = l('Site Building', 'admin/build');
    $breadcrumb[] = l('Relationships', 'admin/build/relationships');
    drupal_set_breadcrumb($breadcrumb);
  }
  if ($form_id == 'riat_ui_add_relationship') {
    $relationship = riat_relationship_load(0, $form['name']['#value']);
    $breadcrumb = drupal_get_breadcrumb();
    $breadcrumb[] = l($relationship->title, "admin/build/relationships/list/$relationship->name/manage");
    drupal_set_breadcrumb($breadcrumb);
    module_load_include('inc', 'riat_ui', 'includes/riat_ui.admin');
    $form['#submit'][] = 'riat_ui_add_relationship_submit';
  }
}

function riat_ui_theme($existing, $type, $theme, $path) {
  return array(
    'riat_manage_relationship_form' => array(
      'arguments' => array('form' => NULL),
    ),
    'riat_ui_base_relationship' => array(
      'arguments' => array('tree' => NULL),
    ),
  );
}

function theme_riat_ui_base_relationship($tree) {
  $output = '';
  $output .= '<div class="relationship-base">';
  $headers = array(
    t('Machine Name'),
    t('Title'),
    t('Description'),
    t('Entity'),
    t('Type'),
    t('Operations'),
  );
  $base = array();
  foreach ($tree as $key => $value) {
    if (is_string($value)) {
      $base[$key] = $value;
    }
  }
  $rows[] = array_merge($base, array(riat_ui_get_operations($tree)));
  $output .= theme('table', $headers, $rows);
  $output .= '</div>';
  return $output;
}

function theme_riat_manage_relationship_form($form) {
  drupal_add_tabledrag('riat-overview', 'match', 'parent', 'riat-pchid', 'riat-pchid', 'riat-chid', TRUE, MENU_MAX_DEPTH - 1);
  drupal_add_tabledrag('riat-overview', 'order', 'sibling', 'riat-weight');
  $output = '';
  $output .= drupal_render($form['base']);

  $header = array(
    t('Relationship'),
    t('Weight'),
    t('Operations'),
  );

  $rows = array();
  foreach (element_children($form) as $chid) {
    if (is_numeric($chid)) {
      $element = &$form[$chid];

      // Add special classes to be used for tabledrag.js.
      $element['#attributes'] = isset($element['#attributes']) ? $element['#attributes'] : array();
      $element['pchid']['#attributes']['class'] = 'riat-pchid';
      $element['chid']['#attributes']['class'] = 'riat-chid';
      $element['weight']['#attributes']['class'] = 'riat-weight';
  
      // Change the parent field to a hidden. This allows any value but hides the field.
      $element['pchid']['#type'] = 'hidden';
  
      $row = array();
      $row[] = theme('indentation', $element['#item']->depth - 1) . drupal_render($element['title']);
      $row[] = drupal_render($element['weight']) . drupal_render($element['pchid']) . drupal_render($element['chid']);
      $row[] = drupal_render($element['operations']);
  
      $row = array_merge(array('data' => $row), $element['#attributes']);
      $row['class'] = !empty($row['class']) ? $row['class'] .' draggable' : 'draggable';
      $rows[] = $row;
    }
  }

  if ($rows) {
    $output .= theme('table', $header, $rows, array('id' => 'riat-overview'));
  }
  $output .= drupal_render($form);
  return $output;
}

function riat_ui_get_operations($item, $path = 'admin/build/relationships/%relationship/manage') {
  drupal_add_css(drupal_get_path('module', 'riat_ui') .'/css/riat_ui.css');
  $item->chid = $item->chid ? $item->chid : 0;
  $path = str_replace('%relationship', $item->name, $path);
  $output = array();
  $operations = module_invoke_all('riat_ui_operations', $item);
  $output[] = l('Add Child', $path .'/'. $item->chid .'/add');
  $output[] = l('Delete', $path .'/'. $item->chid .'/delete');
  return theme('item_list', $output, NULL, 'ul', array('class' => 'riat-operations'));
}
